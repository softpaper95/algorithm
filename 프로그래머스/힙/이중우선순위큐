import heapq
from collections import deque
# operations = ["I 16","D 1"]
operations = ["I -45", "I 653", "D 1", "I -642", "I 45", "I 97", "D 1", "D -1", "I 333"]
# operations = [45, 60, 55, 33, 88]
answer = []

heap = []
max_heap = []

for i in operations:
    i_split = i.split(" ")
    if i_split[0] == "I":
        heapq.heappush(heap,int(i_split[1]))
        heapq.heappush(max_heap,[(int(i_split[1])*-1), int(i_split[1])])
    else:
        if len(heap) == 0:
            pass
        elif i_split[1] == "1":
            num = heapq.heappop(max_heap)[1]
            heap.remove(num)
        else:
            num = heapq.heappop(heap)
            max_heap.remove([(num * -1), num])

if len(heap) == 0:
    answer = [0,0]
else:
    answer = [max(heap), min(heap)]


print(answer)












# for i in operations:
#     i_split = i.split(" ")
#     if i_split[0] == "I":
#         heapq.heappush(answer,int(i_split[1]))
#         # print("I,answer:",answer)
#     else:
#         if i_split[1] == "1":
#
#             temp = []
#             for e in range(len(answer)-1):
#                 heapq.heappush(temp, answer[e])
#
#             answer = []
#             for k in temp:
#                 heapq.heappush(answer, k)
#
#         else:
#             heapq.heappop(answer)
# print(answer)
# print(answer)
# for i in operations:
#     i_split = i.split(" ")
#     if i_split[0] == "I":
#         answer.append(int(i_split[1]))
#     else:
#         oper.append(i_split[1])
# print(answer, oper)
# answer.sort(reverse = True)
# print(answer)
# for op in oper:
#     if len(answer) > 0:
#         if op == '1':
#             answer.pop(0)
#
#         else:
#             answer.pop(-1)
#         print(answer)
# if len(answer) < 1:
#     answer = [0,0]


